buildscript {
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
		classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
		//classpath "org.springframework:spring-core:4.3.3.RELEASE"
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
	repositories {
		jcenter()

		//mavenCentral()*/
		//mavenLocal()
	}
}
apply plugin: 'io.spring.dependency-management'

dependencyManagement { imports {  mavenBom 'org.springframework.cloud:spring-cloud-stream-dependencies:1.0.3.RELEASE'  } }


version = '0.1.0'


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'


/*********** Docker Imaging Begins  ********/

sourceCompatibility = 1.8
version = System.env.IMAGE_VERSION
jar {
	baseName = 'card-statement-composite'
	version = System.env.IMAGE_VERSION
}

def host = System.env.DTR_HOST
def org = System.env.DTR_ORG
def image = System.env.DTR_IMAGE

task buildDocker(type: Docker, dependsOn: build) {
  push = false
  dockerfile = file('src/main/docker/Dockerfile')
  tag = "${host}/${org}/${image}"
  applicationName = "${image}"
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}
/************* Docker Imaging Ends  *********/


repositories {
	

// In this section you declare the dependencies for your production and test code
dependencies {
	
	// Hystrix and Rabbit
	compile("org.springframework.cloud:spring-cloud-starter-hystrix:1.4.0.RELEASE")	
	compile "org.springframework.cloud:spring-cloud-netflix-hystrix-stream:1.1.1.RELEASE"
	compile "org.springframework.cloud:spring-cloud-starter-stream-rabbit:1.3.2.RELEASE"
	
	// The production code uses the SLF4J logging API at compile time
	compile('org.springframework.boot:spring-boot-starter')
	compile("org.springframework.boot:spring-boot-starter-web:1.4.1.RELEASE")
	runtime 'org.codehaus.groovy:groovy:2.4.7'

	// Configuring Logback to write logging events in JSON
	compile 'net.logstash.logback:logstash-logback-encoder:4.8'

	// Caching
	compile("org.springframework.boot:spring-boot-starter-cache")

	
	// Springfox Swagger
	compile "io.springfox:springfox-swagger2:2.7.0"
	compile 'io.springfox:springfox-swagger-ui:2.7.0'

	// Spring Cloud Config
	compile('org.springframework.cloud:spring-cloud-starter-config:1.3.1.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-web:1.5.4.RELEASE')
	
	// Spring IoC Container and Dependency Injection
	compile('javax.inject:javax.inject:1')

	// Notifications
	compile group: 'javax.mail', name: 'mail', version: '1.4'
	compile group: 'com.genworth.mi', name: 'genworth-mi-notification', version: '1.1'
	
	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.
	testCompile 'org.assertj:assertj-core:3.2.0'
	testCompile 'junit:junit:4.12'
	compile 'junit:junit:4.12'
	testCompile 'io.rest-assured:rest-assured:3.0.3'
	testCompile 'org.testng:testng:6.8.1'
}

test.useTestNG()
